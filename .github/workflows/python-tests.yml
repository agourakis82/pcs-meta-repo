---
name: python-tests
'on': [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -r requirements.txt || true
      - run: |
          if [ -f pyproject.toml ]; then
            pip install -e .
          else
            echo "No pyproject.toml, skipping install"
          fi
      - run: pip install pre-commit pytest coverage coverage-badge
      - name: Run pre-commit on tracked files
        id: precommit
        run: pre-commit run --all-files || true

      - name: Commit pre-commit fixes (if any)
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add -A
            git commit -m "style(pre-commit): auto-fix formatting"
            git push
          fi
      - run: coverage run -m pytest
      - run: coverage xml
      - run: coverage-badge -o coverage.svg
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            coverage.svg
