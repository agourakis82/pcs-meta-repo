---
name: ci-validate
on:
  push:
    paths:
      - '**'
  pull_request:
    paths:
      - '**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install YAML tools
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Check repository structure
        run: |
          echo "✅ Checking repository structure..."

          # Check required files
          required_files=(
            "README.md"
            "LICENSE"
            "CITATION.cff"
            "pyproject.toml"
            "requirements.txt"
          )

          missing=0
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "✅ Found: $file"
            else
              echo "⚠️ Missing: $file"
              missing=$((missing+1))
            fi
          done
          if [ "$missing" -gt 0 ]; then
            echo "⚠️ Validation found $missing missing required files (non-blocking)"
          fi

      - name: Validate YAML files
        run: |
          echo "✅ Validating YAML files..."
          python - << 'PY'
          import os, sys
          try:
              import yaml
          except Exception as e:
              print('PyYAML missing or failed to import:', e)
              sys.exit(1)

          bad = []
          for root, _, files in os.walk('.'):
              if 'node_modules' in root:
                  continue
              for fn in files:
                  if fn.endswith(('.yml', '.yaml')):
                      p = os.path.join(root, fn)
                      try:
                          with open(p, 'r', encoding='utf-8') as f:
                              yaml.safe_load(f)
                      except Exception as e:
                          bad.append((p, str(e)))

          for p, e in bad:
              print(f"⚠️ Invalid YAML: {p} -> {e}")
          print(f"Checked YAML files, invalid: {len(bad)}")
          # Non-blocking: always exit 0 to not fail CI
          sys.exit(0)
          PY

      - name: Check Python package structure
        run: |
          echo "✅ Checking Python package structure..."
          if [ -d "src/pcs_toolbox" ]; then
            echo "✅ Found Python package: src/pcs_toolbox"
          fi
          if [ -d "tests" ]; then
            echo "✅ Found tests directory"
          fi
