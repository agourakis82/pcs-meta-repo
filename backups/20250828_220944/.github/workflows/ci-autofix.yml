---
name: ci-autofix
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Executa toda segunda-feira Ã s 9:00 UTC
    - cron: '0 9 * * 1'

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          pip install pre-commit
          npm install -g markdownlint-cli2
          pip install yamllint

      - name: Run pre-commit hooks
        run: pre-commit run --all-files || true

      - name: Execute modo agentico
        run: |
          chmod +x tools/repo_autofix.sh
          bash tools/repo_autofix.sh --agent-mode --skip-hooks

      - name: Upload agent reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-reports
          path: reports/
          retention-days: 30

      - name: Commit & push auto-fixes (somente em push de branch)
        if: >-
          ${{
            github.event_name == 'push' &&
            startsWith(github.ref, 'refs/heads/')
          }}
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email \
              "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m |
              ðŸ¤– style(agent): auto-fix formatting and quality improvements

              - Applied linting rules
              - Generated academic quality reports
              - Updated reproducibility analysis
              - Optimized CI workflows

              Generated by PCS-Meta-Repo Agent Mode v1.0
            git push
          fi

      - name: Create agent summary comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '## ðŸ¤– Agent Mode Report\n\n';

            // Check for academic quality report
            if (fs.existsSync('reports/academic-quality.md')) {
              const academicReport = fs.readFileSync('reports/academic-quality.md', 'utf8');
              const scoreMatch = academicReport.match(/Score de Qualidade: (\d+)%/);
              if (scoreMatch) {
                summary += `ðŸ“Š **Academic Quality Score:** ${scoreMatch[1]}%\n`;
              }
            }

            // Check for reproducibility report
            if (fs.existsSync('reports/reproducibility.md')) {
              const reproReport = fs.readFileSync('reports/reproducibility.md', 'utf8');
              const scoreMatch = reproReport.match(/Score de Reproducibilidade: (\d+)%/);
              if (scoreMatch) {
                summary += `ðŸ”¬ **Reproducibility Score:** ${scoreMatch[1]}%\n`;
              }
            }

            summary += '\n### ðŸ“‹ Actions Taken:\n';
            summary += '- âœ… Code formatting applied\n';
            summary += '- âœ… Linting rules enforced\n';
            summary += '- âœ… Quality reports generated\n';
            summary += '- ðŸ“Š Reports uploaded as artifacts\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
